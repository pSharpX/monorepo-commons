spring.application.name=task-master
server.port=8080

task-master.database.enabled=false
task-master.cache.enabled=false
task-master.notification.enabled=false
task-master.notification.engine=kafka|pubsub
task-master.notification.provisioned=false

task-master.datasource.control-plane.hikari.connectionTimeout=30000 
task-master.datasource.control-plane.hikari.idleTimeout=600000 
task-master.datasource.control-plane.hikari.maxLifetime=1800000
task-master.datasource.control-plane.jdbcUrl=jdbc:postgresql://localhost:5432/your_default_db
task-master.datasource.control-plane.username=your_db_username
task-master.datasource.control-plane.password=your_db_password
task-master.datasource.control-plane.driver-class-name=org.postgresql.Driver
task-master.datasource.control-plane.hibernate.ddl-auto=update

task-master.datasource.notifier.hikari.connectionTimeout=30000
task-master.datasource.notifier.hikari.idleTimeout=600000
task-master.datasource.notifier.hikari.maxLifetime=1800000
task-master.datasource.notifier.jdbcUrl=jdbc:postgresql://localhost:5432/your_default_db
task-master.datasource.notifier.username=your_db_username
task-master.datasource.notifier.password=your_db_password
task-master.datasource.notifier.driver-class-name=org.postgresql.Driver
task-master.datasource.notifier.hibernate.ddl-auto=update

task-master.notification.kafka.topic=TASK_MASTER_NOTIFICATIONS
task-master.notification.kafka.bootstrap.servers=localhost:9092
task-master.notification.kafka.key.serializer=org.apache.kafka.common.serialization.StringSerializer
task-master.notification.kafka.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer
task-master.notification.kafka.request.timeout.ms=60000
task-master.notification.kafka.retry.backoff.ms=500
task-master.notification.kafka.metadata.max.age=180000
task-master.notification.kafka.connection.max.idle=180000
task-master.notification.kafka.consumer.topic=${task-master.notification.kafka.topic}
task-master.notification.kafka.consumer.bootstrap.servers=${task-master.notification.kafka.bootstrap.servers}
task-master.notification.kafka.consumer.key.serializer=${task-master.notification.kafka.key.serializer}
task-master.notification.kafka.consumer.value.serializer=${task-master.notification.kafka.value.serializer}
task-master.notification.kafka.consumer.client.dns.lookup=use_all_dns_ips
task-master.notification.kafka.producer.topic=${task-master.notification.kafka.topic}
task-master.notification.kafka.producer.bootstrap.servers=${task-master.notification.kafka.bootstrap.servers}
task-master.notification.kafka.producer.key.serializer=${task-master.notification.kafka.key.serializer}
task-master.notification.kafka.producer.value.serializer=${task-master.notification.kafka.value.serializer}
task-master.notification.kafka.producer.compression=none
task-master.notification.kafka.producer.acks=all
task-master.notification.kafka.producer.request.timeout.ms=${task-master.notification.kafka.request.timeout.ms}
task-master.notification.kafka.producer.retry.backoff.ms=${task-master.notification.kafka.retry.backoff.ms}
task-master.notification.kafka.producer.metadata.max.age=${task-master.notification.kafka.metadata.max.age}
task-master.notification.kafka.producer.connection.max.idle=${task-master.notification.kafka.connection.max.idle}

management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env,auditevents
management.endpoints.health.show-details=when_authorized

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/api-docs.html
springdoc.swagger-ui.operationsSorter=method