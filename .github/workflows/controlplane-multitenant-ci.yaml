name: Build and Publish Control Plane (Multitenant)

on:
  push:
    branches:
      - main
    paths:
      - 'controlplane-multitenant/**'

env:
  DOCKER_HUB_USER: ${{ vars.DOCKER_HUB_USER }}
  DOCKER_IMAGE_NAME: controlplane-multitenant
  WORKING_DIRECTORY: './controlplane-multitenant'

jobs:
  build:
    name: CI Release
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_HUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,latest
            type=raw,${{ github.run_number }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.WORKING_DIRECTORY }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
